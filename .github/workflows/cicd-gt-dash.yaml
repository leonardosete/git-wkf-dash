name: CI/CD - Build e Deploy GT-Dash

on:
  push:
    branches: [develop]
    paths:
      - "Dockerfile"
      - "src/**"
      - ".github/workflows/cicd-gt-dash.yaml"
      - "apps/gt-dash/**"
  workflow_dispatch:

jobs:
  build-and-push:
    name: 🛠️ Build & Push Docker Image
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.meta.outputs.version }}

    steps:
      - name: 📦 Checkout do código
        uses: actions/checkout@v4

      - name: 🏷️ Gerar metadados de versão
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: docker.io/sevenleo/github-dashboard
          tags: |
            type=sha,format=short
            type=ref,event=branch
            type=raw,value=latest

      - name: 🔐 Login no Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 🏗️ Build e Push da Imagem
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  update-values-and-deploy:
    name: 🚀 Atualiza values.yaml e Deploy ArgoCD
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: 📦 Checkout do código
        uses: actions/checkout@v4

      - name: 🔧 Atualiza tag no values.yaml
        run: |
          IMAGE_TAG="${{ needs.build-and-push.outputs.image_tag }}"
          echo "🔁 Substituindo tag da imagem por $IMAGE_TAG"
          sed -i "s/tag: .*/tag: ${IMAGE_TAG}/" apps/gt-dash/values.yaml

      - name: 🔁 Clona repositório autenticado com PAT
        env:
          GH_PUSH_TOKEN: ${{ secrets.GH_PUSH_TOKEN }}
        run: |
          git clone https://x-access-token:${GH_PUSH_TOKEN}@github.com/${{ github.repository }} repo-auth
          cd repo-auth
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          sed -i "s/tag: .*/tag: ${{ needs.build-and-push.outputs.image_tag }}/" apps/gt-dash/values.yaml
          git add apps/gt-dash/values.yaml
          git commit -m "🚀 Atualiza imagem do gt-dash para tag ${{ needs.build-and-push.outputs.image_tag }}" || echo "Nada para commitar"
          git push origin HEAD:develop

      - name: 🔐 Cria ~/.kube/config
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG_CONTENT }}" > ~/.kube/config

      - name: 🧩 Aplica o Application do ArgoCD
        run: kubectl apply -f argo-apps/gt-dash.yaml -n argocd

      - name: 🔁 Força sync no ArgoCD
        run: |
          kubectl -n argocd patch application gt-dash \
            --type merge -p '{"spec":{"syncPolicy":{"automated":{"prune":true,"selfHeal":true}}}}'
